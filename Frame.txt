.model tiny
.386
;=================================================

START_LINE  equ 5d
START_COORD equ 5d
START_LEN_X equ 10d
START_LEN_Y equ 5d

CNT_OF_ZOOM equ 3d
ZOOM_FOR_X  equ 8d
ZOOM_FOR_Y  equ 3d

MAX_X    equ 80d
MAX_Y    equ 25d
VIDEOSEG equ 0b800h

DWLGF	 equ 27h	; dark white letter, green fone
WLRF	 equ 04fh	; white letter, red fone

VER	 equ 0bah	; vertival   for frame
HOR	 equ 0cdh	; horizontal for frame
ULC	 equ 0c9h	; up-left    corner
URC	 equ 0bbh	; up-right   corner
DLC	 equ 0c8h	; down-left  corner
DRC 	 equ 0bch	; down-right corner
SPC   	 equ 20h	; space
;=================================================

.govideoseg	macro

		mov bx, VIDEOSEG
		mov es, bx

		endm

;=================================================
.code
org 100h

start:
		.govideoseg

		mov ah, DWLGF
		mov dl, START_LEN_X - ZOOM_FOR_X	; -8d for resize
		mov dh, START_LEN_Y - ZOOM_FOR_Y	; -3d for resize

		xor si, si			; si = 0
zoom:
		inc si				; si++
		cmp si, CNT_OF_ZOOM
		jae end_zoom			; if (si >= 3d) goto end_zoom

		add dl, ZOOM_FOR_X		; zoom (x-coord)
		add dh, ZOOM_FOR_Y		; zoom (y-coord)

		mov al, ULC				;}
		mov bx, ((START_LINE*80) + START_COORD)*2 	;| draw up-left symbol
		push bx
		call Draw_Symbol			;}

		push dx				; "save" dx
		xor dh, dh			; dh = 0
		mov al, HOR			;}-----
		mov cx, dx			;| draw up line
		call Draw_Line			;}-----
		pop dx				; restore dx

		mov al, URC			; draw up-right symbol
		call Draw_Symbol		;

		pop bx				; restore bx
		add bx, 80*2

		push si				; "save" si
		xor si, si			; si = 0
do_frame:
		inc si				; si++
		push dx				; "save" dx
		mov dl, dh			;}-----
		xor dh, dh			;| change dh and dl to cmp with si
		cmp si, dx			;}-----
		jae end_frame			; if (si >= dx) goto end_frame
		pop dx				; restore dx

		mov al, VER			; draw left symbol for main part of frame
		push bx
		call Draw_Symbol		;

		push dx				; "save" dx
		xor dh, dh			; dh = 0
		mov al, SPC			;}-----
		mov cx, dx			;| draw main line
		call Draw_Line			;}-----
		pop dx				; restore dx

		mov al, VER			; draw right symbol for main part of frame
		call Draw_Symbol		;

		pop bx				; restore bx
		add bx, 80*2

		jmp do_frame 			; goto do_frame

end_frame:
		pop dx				; restore dx
		pop si				; restore si

		mov al, DLC			; draw down-left sumbol
		push bx
		call Draw_Symbol		;

		push dx				; "save" dx
		xor dh, dh			; dh = 0
		mov al, HOR			;}-----
		mov cx, dx			;| draw down line
		call Draw_Line			;}-----
		pop dx				; restore dx

		mov al, DRC			; draw down-right symbol
		call Draw_Symbol		;
		pop bx				; restore bx

		call Delay
		jmp zoom
end_zoom:
		mov bx, (80*(START_LINE + (ZOOM_FOR_Y*CNT_OF_ZOOM-1)/2) + START_COORD + (ZOOM_FOR_X*CNT_OF_ZOOM-1)/2 - 2)*2	; in middle

		mov al, 'D'
		mov ah, WLRF
		call Draw_Symbol

		mov al, 'E'
		call Draw_Symbol

		mov al, 'D'
		call Draw_Symbol

		ret				; exit (0)

;=================================================
; Draw one symbol
; In:
;	AH - color
;	AL - symbol to draw
; 	ES - VIDEOSEG
;	BX - where draw
;
; Destroy:
;	BX
;	BX += 2
;=================================================

Draw_Symbol	proc

		mov byte ptr es:[bx], al
		inc bx
		push ax
		mov al, ah
		xor ah, ah
		mov byte ptr es:[bx], al
		pop ax
		inc bx

		ret
		endp

;=================================================
; Draw horizontal line
; In:
; 	AH - color
;	AL - symbol to draw
;	BX - where draw
;	CX - length
;	ES = VIDEOSEG
; Destroy:
;	CX, DI
;	BX += CX
;	CX = 0
;=================================================

Draw_Line	proc

		mov di, bx		; di = bx
		add bx, cx
		add bx, cx

		rep stosw		; mov es:[di++], ax

		ret
		endp

;=================================================
; Delay
;=================================================

Delay   	proc

		push bx				; "save" bx
		xor bx, bx			; bx = 0
again:
		add bx, 1			; bx++ (counter++)
		push bx				;}-----
		pop bx				;|
		push bx				;|
		pop bx				;| long time commands
		push bx				;| to make delay
		pop bx				;|
		push bx				;|
		pop bx				;}-----
		cmp bx, 15000			;
		jbe again			; if (bx <= 15000) goto again

		pop bx				; restore bx

        	ret
        	endp


end		start